<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="PPA.Views.EventManagerPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:Converters="clr-namespace:PPA.Converters"
    xmlns:Models="clr-namespace:PPA.Models"
    xmlns:ViewModels="clr-namespace:PPA.ViewModels"
    xmlns:xc="clr-namespace:XCalendar;assembly=XCalendar"
    xmlns:xcModels="clr-namespace:XCalendar.Models;assembly=XCalendar"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit" xmlns:xcConverters="clr-namespace:XCalendar.Converters;assembly=XCalendar" 
             x:DataType="ViewModels:EventManagerViewModel"
             x:Name="This"
    Title="Pocket Personal Assistant"
    xct:SafeAreaEffect.SafeArea="True"
             >
    <ContentPage.Resources>
        <!--  Limits a string to a certain amount of characters  -->
        <xcConverters:StringCharLimitConverter x:Key="StringCharLimitConverter"/>
        <!--  Returns true if all bindings evaluate to true  -->
        <xct:VariableMultiValueConverter x:Key="AllTrueConverter" ConditionType="All"/>
        <!--  Inverts a binded boolean value  -->
        <xct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Add" Command="{Binding AddEventCommand}" />
    </ContentPage.ToolbarItems>

    <RefreshView x:DataType="ViewModels:EventManagerViewModel" Command="{Binding LoadEventsCommand}" IsRefreshing="{Binding IsBusy, Mode=TwoWay}">
        <Grid
        ColumnSpacing="0"
        RowDefinitions="Auto,*"
        RowSpacing="0">

            <Frame
            Margin="10"
            Padding="0"
            BackgroundColor="White"
            CornerRadius="15">

                <xc:CalendarView
                x:Name="MainCalendarView"
                Grid.Row="0"
                DayNameTextColor="#1167B1"
                NavigationArrowColor="#1167B1"
                NavigationBackgroundColor="Transparent"
                NavigationTextColor="#1167B1"
                SelectedDates="{Binding SelectedDates}"
                SelectionAction="Modify"
                SelectionType="Single">

                    <xc:CalendarView.DayTemplate>
                        <DataTemplate x:DataType="{x:Type xcModels:CalendarDay}">
                            <!--  ContentView so that the margin is respected by the MonthView  -->
                            <ContentView>
                                <xc:CalendarDayView
                                Margin="2.5"
                                HeightRequest="43"
                                CalendarView="{Binding ., Source={x:Reference MainCalendarView}}"
                                CurrentMonthTextColor="{StaticResource CalendarBackgroundTextColor}"
                                DateTime="{Binding DateTime}"
                                OutOfRangeTextColor="#1167B1"
                                SelectedTextColor="{StaticResource CalendarPrimaryTextColor}"
                                TodayBorderColor="{StaticResource CalendarPrimaryColor}"
                                TodayTextColor="{StaticResource CalendarBackgroundTextColor}">

                                    <xc:CalendarDayView.ControlTemplate>
                                        <ControlTemplate>
                                            <!--  Using a Grid to stack views on the z axis  -->
                                            <Grid RowSpacing="2">

                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="1.5*"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <!--  ContentPresenter displays the default content for the control  -->
                                                <ContentPresenter
                                                Grid.Row="0"
                                                Grid.RowSpan="2"
                                                VerticalOptions="Center"/>

                                                <StackLayout
                                                Grid.Row="1"
                                                HorizontalOptions="Center"
                                                Orientation="Horizontal"
                                                Spacing="2.5">

                                                    <!--  I want the event indicators to only be visible when the DateTime is in the currently navigated month  -->
                                                    <StackLayout.IsVisible>
                                                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                                            <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                                            <Binding Path="IsCurrentMonth" Source="{RelativeSource TemplatedParent}"/>
                                                            <Binding
                                                            Converter="{StaticResource InvertedBoolConverter}"
                                                            Path="IsOutOfRange"
                                                            Source="{RelativeSource TemplatedParent}"/>
                                                        </MultiBinding>
                                                    </StackLayout.IsVisible>

                                                    <BindableLayout.ItemsSource>
                                                        <Binding Path="DateTime.Date" Source="{RelativeSource TemplatedParent}">
                                                            <Binding.Converter>
                                                                <Converters:EventWhereConverter
                                                                Items="{Binding BindingContext.Events, Source={x:Reference This}}"
                                                                UseTimeComponent="False"
                                                                WhiteList="True"/>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </BindableLayout.ItemsSource>

                                                    <BindableLayout.ItemTemplate>
                                                        <DataTemplate x:DataType="{x:Type Models:Event}">
                                                            <BoxView
                                                            CornerRadius="100"
                                                            HeightRequest="7"
                                                            HorizontalOptions="CenterAndExpand"
                                                            VerticalOptions="Center"
                                                            WidthRequest="7"
                                                            Color="#187BCD"/>
                                                        </DataTemplate>
                                                    </BindableLayout.ItemTemplate>

                                                </StackLayout>

                                            </Grid>
                                        </ControlTemplate>
                                    </xc:CalendarDayView.ControlTemplate>

                                </xc:CalendarDayView>
                            </ContentView>
                        </DataTemplate>
                    </xc:CalendarView.DayTemplate>

                </xc:CalendarView>

            </Frame>

            <CollectionView Grid.Row="1" ItemsSource="{Binding SelectedEvents}">

                <CollectionView.EmptyView>
                    <Label
                    FontAttributes="Bold"
                    FontSize="20"
                    HorizontalTextAlignment="Center"
                    Text="No Events on Selected Date(s)"
                    TextColor="#03254C"
                    VerticalTextAlignment="Center"/>
                </CollectionView.EmptyView>
                <CollectionView.ItemsLayout>
                    <LinearItemsLayout ItemSpacing="0" Orientation="Vertical"/>
                </CollectionView.ItemsLayout>

                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="{x:Type Models:Event}">
                        <ContentView Padding="5">
                            <Frame
                            Padding="0"
                            BackgroundColor="{StaticResource ContentBackgroundColor}"
                            CornerRadius="10">
                                <StackLayout Orientation="Horizontal" Spacing="0" BackgroundColor="#D0EFFF">
                                    <BoxView BackgroundColor="#578BF3" WidthRequest="20"/>
                                    <Grid>
                                        <StackLayout Padding="10,0,0,10" Spacing="0" Grid.Column="0">
                                            <Label
                                        FontAttributes="Bold"
                                        FontSize="20"
                                        Text="{Binding DateTime, StringFormat='{0: dd MMMM HH:mm}'}"
                                        TextColor="#03254C"
                                        VerticalTextAlignment="Center"/>
                                            <Label
                                        FontSize="16"
                                        Text="{Binding Title}"
                                        TextColor="#03254C"
                                        Margin="5,0,0,0"/>
                                            <Label
                                        Margin="5,10,0,0"
                                        FontSize="14"
                                        Text="{Binding Description}"
                                        TextColor="#03254C"/>
                                        </StackLayout>
                                        <Button Text="Delete" 
                                                Grid.Column="1"
                                                Margin="100,0,0,0"
                                                BackgroundColor="#578BF3"
                                                TextColor="white"
                                                  Command="{Binding Source={RelativeSource AncestorType={x:Type ViewModels:EventManagerViewModel}}, Path=DeleteEventCommand}"		
                                CommandParameter="{Binding .}"
                                                />
                                    </Grid>
                                </StackLayout>

                            </Frame>
                        </ContentView>
                    </DataTemplate>

                </CollectionView.ItemTemplate>
            </CollectionView>

        </Grid>
    </RefreshView>
</ContentPage>